import { useEffect, useState } from "react";
import VanCard from "../components/ui/VanCard";
import MyModal from "../components/ui/myModal";
import Spinner from "../components/ui/spinner";
import { useSearchParams } from "react-router-dom";

function Vans() {
    const [vans, setVans] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    const [searchParams, setSearchParams] = useSearchParams();
    const typeFilter = searchParams.get("type");
    console.log(typeFilter);

    useEffect(() => {
        console.log(1);
        setIsLoading(true);
        fetch("/api/vans")
            .then((res) => res.json())
            .then((value) => {
                if (typeFilter) {
                    const vans = filterVans(typeFilter, value.vans);
                    setVans(vans);
                } else {
                    setVans(value.vans);
                }
                setIsLoading(false);
            });
    }, [typeFilter]);

    useEffect(() => {
        console.log(2);
    }, []);

    const filterVans = (type, vans = []) => {
        return vans.filter((van) => van.type === type);
    };

    const setURLFilter = (type) => {
        setSearchParams((prev) => {
            if (prev.has("type")) {
                return prev.set("type", type);
            }
            return prev.append("type", type);
        });
    };

    return (
        <section className="vans bodyPage">
            <h2 className="fz_2rem lh_2rem">Explore our van options</h2>
            <div className="vansFilterRow">
                <span
                    onClick={() => setURLFilter("simple")}
                    className="vansFilter"
                >
                    Simple
                </span>
                <span
                    className="vansFilter"
                    onClick={() => setURLFilter("luxury")}
                >
                    Luxury
                </span>
                <span
                    className="vansFilter"
                    onClick={() => setURLFilter("rugged")}
                >
                    Rugged
                </span>
                <span>Clear Filters</span>
            </div>
            <div className="vansList">
                {!isLoading && vans.length !== 0 ? (
                    vans.map((van) => <VanCard key={van.id} van={van} />)
                ) : (
                    <MyModal>
                        <Spinner />
                        Loading ...
                    </MyModal>
                )}
            </div>
        </section>
    );
}

export default Vans;
